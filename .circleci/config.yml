version: 2.1

orbs:
  docker: circleci/docker@2.2.0


jobs:
  build:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      - checkout
      - run:
          working_directory: Financio/Financio
          name: Build solution
          command: | 
            dotnet restore
            dotnet build
  sonarcloud:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0-alpine3.17
    steps:
      - checkout
      - run:
          name: Install SonarScanner
          command: |
            VERSION=4.6.2.2472
            SONAR_TOKEN=$SONAR_TOKEN
            SCANNER_DIRECTORY=/tmp/cache/scanner
            export SONAR_USER_HOME=$SCANNER_DIRECTORY/.sonar
            OS="linux"
            echo $SONAR_USER_HOME

            if [[ ! -x "$SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS/bin/sonar-scanner" ]]; then
              curl -Ol https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$VERSION-$OS.zip
              unzip -qq -o sonar-scanner-cli-$VERSION-$OS.zip -d $SCANNER_DIRECTORY
            fi

            chmod +x $SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS/bin/sonar-scanner
            chmod +x $SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS/jre/bin/java
          
      # Run SonarScanner
      - run:
          name: SonarCloud Analysis
          command: |
            $SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS/bin/sonar-scanner
          environment:
            SONAR_TOKEN: $SONAR_TOKEN
  unit-test:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      - checkout
      - run:
          working_directory: Financio/UnitTestProject
          name: Run unit tests
          command: |
            dotnet restore
            dotnet test --filter FullyQualifiedName~UnitTestProject

  integration-test:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      - checkout
      - run:
          working_directory: Financio/IntegrationTestProject
          name: Run integration tests
          command: |
            dotnet restore
            dotnet test --filter FullyQualifiedName~IntegrationTestProject

  build-and-push-image:
    docker:
      - image: docker:20.10.11
    steps:
      - checkout
      - setup_remote_docker
      - run:
          working_directory: Financio
          name: Build Docker image
          command: |
            docker build -t btymo/btymo-repo:backend .
            docker login --username=btymo --password=$DOCKERHUB_PASSWORD
            docker push btymo/btymo-repo:backend

workflows:
  workflow:
    jobs:
      - build:
          filters:
            branches:
              only:
                - main
      - unit-test:
          filters:
            branches:
              only:
                - main
          requires:
            - build
      - integration-test:
          filters:
            branches:
              only:
                - main
          requires:
            - build
      - sonarcloud:
          filters:
            branches:
              only:
                - main
          requires:
            - build
      - build-and-push-image:
          filters:
            branches:
              only:
                - main
          requires:
            - integration-test
